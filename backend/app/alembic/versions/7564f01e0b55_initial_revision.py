"""Initial revision

Revision ID: 7564f01e0b55
Revises: 
Create Date: 2024-09-04 12:04:57.150450

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7564f01e0b55'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_guided_journal_entries_user_id', table_name='guided_journal_entries')
    op.create_index(op.f('ix_guided_journal_entries_patient_data_id'), 'guided_journal_entries', ['patient_data_id'], unique=False)
    op.drop_constraint('guided_journal_entries_user_id_fkey', 'guided_journal_entries', type_='foreignkey')
    op.drop_column('guided_journal_entries', 'user_id')
    op.drop_index('ix_journal_entries_user_id', table_name='journal_entries')
    op.create_index(op.f('ix_journal_entries_patient_data_id'), 'journal_entries', ['patient_data_id'], unique=False)
    op.drop_constraint('journal_entries_user_id_fkey', 'journal_entries', type_='foreignkey')
    op.drop_column('journal_entries', 'user_id')
    op.drop_index('ix_mood_entries_user_id', table_name='mood_entries')
    op.create_index(op.f('ix_mood_entries_patient_data_id'), 'mood_entries', ['patient_data_id'], unique=False)
    op.drop_constraint('mood_entries_user_id_fkey', 'mood_entries', type_='foreignkey')
    op.drop_column('mood_entries', 'user_id')

    # Manual column additions
    op.execute(
        """
        ALTER TABLE mood_entries 
        ADD COLUMN IF NOT EXISTS patient_data_id INTEGER REFERENCES patient_data(id);
        """
    )
    op.execute(
        """
        ALTER TABLE journal_entries 
        ADD COLUMN IF NOT EXISTS patient_data_id INTEGER REFERENCES patient_data(id);
        """
    )
    op.execute(
        """
        ALTER TABLE guided_journal_entries 
        ADD COLUMN IF NOT EXISTS patient_data_id INTEGER REFERENCES patient_data(id);
        """
    )

    # Backfill patient_data table
    op.execute(
        """
        INSERT INTO patient_data (user_id)
        SELECT id FROM users
        WHERE is_therapist = FALSE
        AND id NOT IN (SELECT user_id FROM patient_data);
        """
    )

    # Backfill patient_data_id in mood_entries, journal_entries, and guided_journal_entries
    op.execute(
        """
        UPDATE mood_entries 
        SET patient_data_id = (
            SELECT id FROM patient_data 
            WHERE patient_data.user_id = mood_entries.user_id
        );
        """
    )
    op.execute(
        """
        UPDATE journal_entries 
        SET patient_data_id = (
            SELECT id FROM patient_data 
            WHERE patient_data.user_id = journal_entries.user_id
        );
        """
    )
    op.execute(
        """
        UPDATE guided_journal_entries 
        SET patient_data_id = (
            SELECT id FROM patient_data 
            WHERE patient_data.user_id = guided_journal_entries.user_id
        );
        """
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('mood_entries', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('mood_entries_user_id_fkey', 'mood_entries', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_mood_entries_patient_data_id'), table_name='mood_entries')
    op.create_index('ix_mood_entries_user_id', 'mood_entries', ['user_id'], unique=False)
    op.add_column('journal_entries', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('journal_entries_user_id_fkey', 'journal_entries', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_journal_entries_patient_data_id'), table_name='journal_entries')
    op.create_index('ix_journal_entries_user_id', 'journal_entries', ['user_id'], unique=False)
    op.add_column('guided_journal_entries', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('guided_journal_entries_user_id_fkey', 'guided_journal_entries', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_guided_journal_entries_patient_data_id'), table_name='guided_journal_entries')
    op.create_index('ix_guided_journal_entries_user_id', 'guided_journal_entries', ['user_id'], unique=False)
    # ### end Alembic commands ###

